{"ast":null,"code":"var _jsxFileName = \"/Users/ilan/dev/around-react_p10/around-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport { api } from '../utils/api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddCardPopupOpen, setIsAddCardPopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isCardImagePopupOpen, setIsCardImagePopupOpen] = React.useState(false);\n  const [cardData, setCardData] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  React.useEffect(() => {\n    api.getUserInfo().then(data => {\n      setCurrentUser(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleUserInfo(userData) {\n    api.editUserInfo(userData.name, userData.about).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateAvatar(userData) {\n    api.setUserAvatar(userData.avatar).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    });\n  }\n\n  function handleEditProfilePopupClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlacePopupClick() {\n    setIsAddCardPopupOpen(true);\n  }\n\n  function handleEditAvatarPopupClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardImagePopupClick() {\n    setIsCardImagePopupOpen(true);\n  }\n\n  function handleCardData(cardData) {\n    setCardData(cardData);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddCardPopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsCardImagePopupOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfileClick: handleEditProfilePopupClick,\n        onAddPlaceClick: handleAddPlacePopupClick,\n        onEditAvatarClick: handleEditAvatarPopupClick,\n        onCardImageClick: handleCardImagePopupClick,\n        updateCardData: handleCardData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUserInfo: handleUserInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"add-card\",\n        isOpen: isAddCardPopupOpen,\n        onClose: closeAllPopups,\n        headerText: \"New Place\",\n        buttonText: \"Save\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"popup-menu__input popup-menu__input_type_title\",\n          name: \"userName\",\n          type: \"text\",\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"popup-menu__input popup-menu__input_type_url\",\n          name: \"link\",\n          type: \"text\",\n          placeholder: \"Image link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        isOpen: isCardImagePopupOpen,\n        onClose: closeAllPopups,\n        cardData: cardData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"B4KAUbPV8hd5MRJ0e50zfkf6GyE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ilan/dev/around-react_p10/around-react/src/components/App.js"],"names":["React","Header","Main","Footer","PopupWithForm","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddCardPopupOpen","setIsAddCardPopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isCardImagePopupOpen","setIsCardImagePopupOpen","cardData","setCardData","currentUser","setCurrentUser","useEffect","getUserInfo","then","data","catch","err","console","log","handleUserInfo","userData","editUserInfo","name","about","closeAllPopups","handleUpdateAvatar","setUserAvatar","avatar","handleEditProfilePopupClick","handleAddPlacePopupClick","handleEditAvatarPopupClick","handleCardImagePopupClick","handleCardData"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,sBAAD,EAAyBC,yBAAzB,IACJZ,KAAK,CAACa,QAAN,CAAe,KAAf,CADF;AAEA,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8Cf,KAAK,CAACa,QAAN,CAAe,KAAf,CAApD;AACA,QAAM,CAACG,qBAAD,EAAwBC,wBAAxB,IACJjB,KAAK,CAACa,QAAN,CAAe,KAAf,CADF;AAEA,QAAM,CAACK,oBAAD,EAAuBC,uBAAvB,IAAkDnB,KAAK,CAACa,QAAN,CAAe,KAAf,CAAxD;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BrB,KAAK,CAACa,QAAN,CAAe,EAAf,CAAhC;AAEA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCvB,KAAK,CAACa,QAAN,CAAe,EAAf,CAAtC;AACAb,EAAAA,KAAK,CAACwB,SAAN,CAAgB,MAAM;AACpBlB,IAAAA,GAAG,CACAmB,WADH,GAEGC,IAFH,CAESC,IAAD,IAAU;AACdJ,MAAAA,cAAc,CAACI,IAAD,CAAd;AACD,KAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAPH;AAQD,GATD,EASG,EATH;;AAWA,WAASG,cAAT,CAAwBC,QAAxB,EAAkC;AAChC3B,IAAAA,GAAG,CACA4B,YADH,CACgBD,QAAQ,CAACE,IADzB,EAC+BF,QAAQ,CAACG,KADxC,EAEGV,IAFH,CAESC,IAAD,IAAU;AACdJ,MAAAA,cAAc,CAACI,IAAD,CAAd;AACAU,MAAAA,cAAc;AACf,KALH,EAMGT,KANH,CAMUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KARH;AASD;;AAED,WAASS,kBAAT,CAA4BL,QAA5B,EAAsC;AACpC3B,IAAAA,GAAG,CAACiC,aAAJ,CAAkBN,QAAQ,CAACO,MAA3B,EAAmCd,IAAnC,CAAyCC,IAAD,IAAU;AAChDJ,MAAAA,cAAc,CAACI,IAAD,CAAd;AACAU,MAAAA,cAAc;AACf,KAHD;AAID;;AAED,WAASI,2BAAT,GAAuC;AACrC7B,IAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACD;;AAED,WAAS8B,wBAAT,GAAoC;AAClC3B,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD;;AAED,WAAS4B,0BAAT,GAAsC;AACpC1B,IAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACD;;AAED,WAAS2B,yBAAT,GAAqC;AACnCzB,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACD;;AAED,WAAS0B,cAAT,CAAwBzB,QAAxB,EAAkC;AAChCC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD;;AAED,WAASiB,cAAT,GAA0B;AACxBzB,IAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACAG,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAE,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACAE,IAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACD;;AAED,sBACE,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEG,WAApC;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AACE,QAAA,kBAAkB,EAAEmB,2BADtB;AAEE,QAAA,eAAe,EAAEC,wBAFnB;AAGE,QAAA,iBAAiB,EAAEC,0BAHrB;AAIE,QAAA,gBAAgB,EAAEC,yBAJpB;AAKE,QAAA,cAAc,EAAEC;AALlB;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE,QAAC,gBAAD;AACE,QAAA,MAAM,EAAElC,sBADV;AAEE,QAAA,OAAO,EAAE0B,cAFX;AAGE,QAAA,gBAAgB,EAAEL;AAHpB;AAAA;AAAA;AAAA;AAAA,cAVF,eAgBE,QAAC,aAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,MAAM,EAAElB,kBAFV;AAGE,QAAA,OAAO,EAAEuB,cAHX;AAIE,QAAA,UAAU,EAAC,WAJb;AAKE,QAAA,UAAU,EAAC,MALb;AAAA,gCAOE;AACE,UAAA,SAAS,EAAC,gDADZ;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,gBAPF,eAaE;AACE,UAAA,SAAS,EAAC,8CADZ;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,eAqCE,QAAC,eAAD;AACE,QAAA,MAAM,EAAErB,qBADV;AAEE,QAAA,OAAO,EAAEqB,cAFX;AAGE,QAAA,cAAc,EAAEC;AAHlB;AAAA;AAAA;AAAA;AAAA,cArCF,eA2CE,QAAC,UAAD;AACE,QAAA,MAAM,EAAEpB,oBADV;AAEE,QAAA,OAAO,EAAEmB,cAFX;AAGE,QAAA,QAAQ,EAAEjB;AAHZ;AAAA;AAAA;AAAA;AAAA,cA3CF,eAiDE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAjDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuDD;;GA1HQV,G;;KAAAA,G;AA2HT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport { api } from '../utils/api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] =\n    React.useState(false);\n  const [isAddCardPopupOpen, setIsAddCardPopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] =\n    React.useState(false);\n  const [isCardImagePopupOpen, setIsCardImagePopupOpen] = React.useState(false);\n  const [cardData, setCardData] = React.useState({});\n\n  const [currentUser, setCurrentUser] = React.useState({});\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then((data) => {\n        setCurrentUser(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  function handleUserInfo(userData) {\n    api\n      .editUserInfo(userData.name, userData.about)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleUpdateAvatar(userData) {\n    api.setUserAvatar(userData.avatar).then((data) => {\n      setCurrentUser(data);\n      closeAllPopups();\n    });\n  }\n\n  function handleEditProfilePopupClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlacePopupClick() {\n    setIsAddCardPopupOpen(true);\n  }\n\n  function handleEditAvatarPopupClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardImagePopupClick() {\n    setIsCardImagePopupOpen(true);\n  }\n\n  function handleCardData(cardData) {\n    setCardData(cardData);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddCardPopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsCardImagePopupOpen(false);\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page-container\">\n        <Header />\n        <Main\n          onEditProfileClick={handleEditProfilePopupClick}\n          onAddPlaceClick={handleAddPlacePopupClick}\n          onEditAvatarClick={handleEditAvatarPopupClick}\n          onCardImageClick={handleCardImagePopupClick}\n          updateCardData={handleCardData}\n        />\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUserInfo={handleUserInfo}\n        />\n\n        <PopupWithForm\n          name=\"add-card\"\n          isOpen={isAddCardPopupOpen}\n          onClose={closeAllPopups}\n          headerText=\"New Place\"\n          buttonText=\"Save\"\n        >\n          <input\n            className=\"popup-menu__input popup-menu__input_type_title\"\n            name=\"userName\"\n            type=\"text\"\n            placeholder=\"Name\"\n          />\n          <input\n            className=\"popup-menu__input popup-menu__input_type_url\"\n            name=\"link\"\n            type=\"text\"\n            placeholder=\"Image link\"\n          />\n        </PopupWithForm>\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n\n        <ImagePopup\n          isOpen={isCardImagePopupOpen}\n          onClose={closeAllPopups}\n          cardData={cardData}\n        />\n\n        <Footer />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}