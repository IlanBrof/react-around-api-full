{"ast":null,"code":"import _slicedToArray from\"/Users/ilan/dev/around-react_p10/around-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"/Users/ilan/dev/around-react_p10/around-react/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import{useState}from'react';import{css}from'@emotion/react';import ClockLoader from'react-spinners/ClockLoader';// Can be a string as well. Need to ensure each key-value pair ends with ;\nimport{jsx as _jsx}from\"react/jsx-runtime\";var override=css(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: block;\\n  left: 0;\\n  right: 0;\\n  margin-left: auto;\\n  margin-right: auto;\\n  position: absolute;\\n  border-color: white;\\n\"])));function Loader(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState('#fff'),_useState4=_slicedToArray(_useState3,2),color=_useState4[0],setColor=_useState4[1];return/*#__PURE__*/_jsx(\"div\",{className:\"sweet-loading\",children:/*#__PURE__*/_jsx(ClockLoader,{color:color,loading:loading,css:override,size:50})});}export default Loader;","map":{"version":3,"sources":["/Users/ilan/dev/around-react_p10/around-react/src/components/Loader.js"],"names":["useState","css","ClockLoader","override","Loader","loading","setLoading","color","setColor"],"mappings":"0SAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,GAAT,KAAoB,gBAApB,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CAEA;2CACA,GAAMC,CAAAA,QAAQ,CAAGF,GAAH,2MAAd,CAUA,QAASG,CAAAA,MAAT,EAAkB,CAChB,cAA4BJ,QAAQ,CAAC,IAAD,CAApC,wCAAKK,OAAL,eAAcC,UAAd,eACA,eAAwBN,QAAQ,CAAC,MAAD,CAAhC,yCAAKO,KAAL,eAAYC,QAAZ,eAEA,mBACE,YAAK,SAAS,CAAC,eAAf,uBACE,KAAC,WAAD,EAAa,KAAK,CAAED,KAApB,CAA2B,OAAO,CAAEF,OAApC,CAA6C,GAAG,CAAEF,QAAlD,CAA4D,IAAI,CAAE,EAAlE,EADF,EADF,CAKD,CAED,cAAeC,CAAAA,MAAf","sourcesContent":["import { useState } from 'react';\nimport { css } from '@emotion/react';\nimport ClockLoader from 'react-spinners/ClockLoader';\n\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  left: 0;\n  right: 0;\n  margin-left: auto;\n  margin-right: auto;\n  position: absolute;\n  border-color: white;\n`;\n\nfunction Loader() {\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState('#fff');\n\n  return (\n    <div className=\"sweet-loading\">\n      <ClockLoader color={color} loading={loading} css={override} size={50} />\n    </div>\n  );\n}\n\nexport default Loader;\n"]},"metadata":{},"sourceType":"module"}