{"ast":null,"code":"var _jsxFileName = \"/Users/ilan/dev/react-around-api-full/frontend/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(props) {\n  _s();\n\n  const imageDataForPopup = () => {\n    props.onClick();\n    props.updateCardData(card);\n  };\n\n  const currentUser = React.useContext(CurrentUserContext); // Checking if the current user is the owner of the current card\n\n  const card = props.card;\n  const isOwn = card.owner === currentUser._id;\n  console.log(card.owner, currentUser._id);\n  console.log(`Well why is this false? ${isOwn}`); // Creating a variable which you'll then set in `className` for the delete button\n\n  const cardEraseButtonClassName = `card__erase ${isOwn ? 'card__erase' : 'card__erase_hidden'}`; // Check if the card was liked by the current user\n\n  const isLiked = card.likes.some(i => i._id === currentUser._id); // Create a variable which you then set in `className` for the like button\n\n  const cardLikeButtonClassName = `card__like-button ${isLiked ? 'card__like-button_active' : 'card__like-button'}`;\n\n  function handleLikeClick() {\n    props.onCardLike(card);\n  }\n\n  function handleDeleteClick() {\n    props.onCardDelete(card);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: cardEraseButtonClassName,\n      type: \"button\",\n      \"aria-label\": \"erase-button\",\n      onClick: handleDeleteClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"card__image\",\n      onClick: imageDataForPopup,\n      src: card.link,\n      alt: card.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card__photo-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card__text\",\n        children: card.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card__heart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: cardLikeButtonClassName,\n          type: \"button\",\n          \"aria-label\": \"like-button\",\n          onClick: handleLikeClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"card__like-count\",\n          children: card.likes.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/ilan/dev/react-around-api-full/frontend/src/components/Card.js"],"names":["React","CurrentUserContext","Card","props","imageDataForPopup","onClick","updateCardData","card","currentUser","useContext","isOwn","owner","_id","console","log","cardEraseButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","handleLikeClick","onCardLike","handleDeleteClick","onCardDelete","link","name","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAMC,iBAAiB,GAAG,MAAM;AAC9BD,IAAAA,KAAK,CAACE,OAAN;AACAF,IAAAA,KAAK,CAACG,cAAN,CAAqBC,IAArB;AACD,GAHD;;AAKA,QAAMC,WAAW,GAAGR,KAAK,CAACS,UAAN,CAAiBR,kBAAjB,CAApB,CANmB,CAQnB;;AACA,QAAMM,IAAI,GAAGJ,KAAK,CAACI,IAAnB;AACA,QAAMG,KAAK,GAAGH,IAAI,CAACI,KAAL,KAAeH,WAAW,CAACI,GAAzC;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACI,KAAjB,EAAwBH,WAAW,CAACI,GAApC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAa,2BAA0BJ,KAAM,EAA7C,EAbmB,CAenB;;AACA,QAAMK,wBAAwB,GAAI,eAChCL,KAAK,GAAG,aAAH,GAAmB,oBACzB,EAFD,CAhBmB,CAoBnB;;AACA,QAAMM,OAAO,GAAGT,IAAI,CAACU,KAAL,CAAWC,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACP,GAAF,KAAUJ,WAAW,CAACI,GAA7C,CAAhB,CArBmB,CAuBnB;;AACA,QAAMQ,uBAAuB,GAAI,qBAC/BJ,OAAO,GAAG,0BAAH,GAAgC,mBACxC,EAFD;;AAIA,WAASK,eAAT,GAA2B;AACzBlB,IAAAA,KAAK,CAACmB,UAAN,CAAiBf,IAAjB;AACD;;AAED,WAASgB,iBAAT,GAA6B;AAC3BpB,IAAAA,KAAK,CAACqB,YAAN,CAAmBjB,IAAnB;AACD;;AAED,sBACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA,4BACE;AACE,MAAA,SAAS,EAAEQ,wBADb;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,oBAAW,cAHb;AAIE,MAAA,OAAO,EAAEQ;AAJX;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,OAAO,EAAEnB,iBAFX;AAGE,MAAA,GAAG,EAAEG,IAAI,CAACkB,IAHZ;AAIE,MAAA,GAAG,EAAElB,IAAI,CAACmB;AAJZ;AAAA;AAAA;AAAA;AAAA,YAPF,eAaE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBAA4BnB,IAAI,CAACmB;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAEN,uBADb;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,wBAAW,aAHb;AAIE,UAAA,OAAO,EAAEC;AAJX;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA,oBAAoCd,IAAI,CAACU,KAAL,CAAWU;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAhEQzB,I;;KAAAA,I;AAkET,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\nfunction Card(props) {\n  const imageDataForPopup = () => {\n    props.onClick();\n    props.updateCardData(card);\n  };\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  // Checking if the current user is the owner of the current card\n  const card = props.card;\n  const isOwn = card.owner === currentUser._id;\n\n  console.log(card.owner, currentUser._id);\n  console.log(`Well why is this false? ${isOwn}`);\n\n  // Creating a variable which you'll then set in `className` for the delete button\n  const cardEraseButtonClassName = `card__erase ${\n    isOwn ? 'card__erase' : 'card__erase_hidden'\n  }`;\n\n  // Check if the card was liked by the current user\n  const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n  // Create a variable which you then set in `className` for the like button\n  const cardLikeButtonClassName = `card__like-button ${\n    isLiked ? 'card__like-button_active' : 'card__like-button'\n  }`;\n\n  function handleLikeClick() {\n    props.onCardLike(card);\n  }\n\n  function handleDeleteClick() {\n    props.onCardDelete(card);\n  }\n\n  return (\n    <li className=\"card\">\n      <button\n        className={cardEraseButtonClassName}\n        type=\"button\"\n        aria-label=\"erase-button\"\n        onClick={handleDeleteClick}\n      ></button>\n      <img\n        className=\"card__image\"\n        onClick={imageDataForPopup}\n        src={card.link}\n        alt={card.name}\n      />\n      <div className=\"card__photo-description\">\n        <h2 className=\"card__text\">{card.name}</h2>\n        <div className=\"card__heart-container\">\n          <button\n            className={cardLikeButtonClassName}\n            type=\"button\"\n            aria-label=\"like-button\"\n            onClick={handleLikeClick}\n          ></button>\n          <span className=\"card__like-count\">{card.likes.length}</span>\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}