{"ast":null,"code":"var _jsxFileName = \"/Users/ilan/dev/around-react_p10/around-react/src/components/Loader.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { css } from '@emotion/react';\nimport ClockLoader from 'react-spinners/ClockLoader'; // Can be a string as well. Need to ensure each key-value pair ends with ;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst override = css`\n  display: block;\n  left: 0;\n  right: 0;\n  margin-left: auto;\n  margin-right: auto;\n  position: absolute;\n  border-color: white;\n`;\n\nfunction Loader() {\n  _s();\n\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState('#fff');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sweet-loading\",\n    children: /*#__PURE__*/_jsxDEV(ClockLoader, {\n      color: color,\n      loading: loading,\n      css: override,\n      size: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Loader, \"wloVzCyufeGZ/98w+DUIQQqVv1A=\");\n\n_c = Loader;\nexport default Loader;\n\nvar _c;\n\n$RefreshReg$(_c, \"Loader\");","map":{"version":3,"sources":["/Users/ilan/dev/around-react_p10/around-react/src/components/Loader.js"],"names":["useState","css","ClockLoader","override","Loader","loading","setLoading","color","setColor"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,WAAP,MAAwB,4BAAxB,C,CAEA;;;AACA,MAAMC,QAAQ,GAAGF,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AAUA,SAASG,MAAT,GAAkB;AAAA;;AAChB,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAApC;AACA,MAAI,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,MAAD,CAAhC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEO,KAApB;AAA2B,MAAA,OAAO,EAAEF,OAApC;AAA6C,MAAA,GAAG,EAAEF,QAAlD;AAA4D,MAAA,IAAI,EAAE;AAAlE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GATQC,M;;KAAAA,M;AAWT,eAAeA,MAAf","sourcesContent":["import { useState } from 'react';\nimport { css } from '@emotion/react';\nimport ClockLoader from 'react-spinners/ClockLoader';\n\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  left: 0;\n  right: 0;\n  margin-left: auto;\n  margin-right: auto;\n  position: absolute;\n  border-color: white;\n`;\n\nfunction Loader() {\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState('#fff');\n\n  return (\n    <div className=\"sweet-loading\">\n      <ClockLoader color={color} loading={loading} css={override} size={50} />\n    </div>\n  );\n}\n\nexport default Loader;\n"]},"metadata":{},"sourceType":"module"}