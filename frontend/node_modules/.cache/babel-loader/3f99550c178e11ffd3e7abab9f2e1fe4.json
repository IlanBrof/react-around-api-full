{"ast":null,"code":"var _jsxFileName = \"/Users/ilan/dev/around-react_p10/around-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmDelPopup from './ConfirmDelPopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddCardPopupOpen, setIsAddCardPopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isCardImagePopupOpen, setIsCardImagePopupOpen] = React.useState(false);\n  const [isConfirmDelPopupOpen, setIsConfirmDelPopupOpen] = React.useState(false);\n  const [cardData, setCardData] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState({});\n  React.useEffect(() => {\n    api.getUserInfo().then(data => {\n      setCurrentUser(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  React.useEffect(() => {\n    (async function () {\n      setLoading(true);\n\n      try {\n        const cardsData = await api.getInitialCards();\n\n        if (cardsData) {\n          setCards(cardsData);\n        }\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  function handleUserInfo(newCard) {\n    api.editUserInfo(newCard.name, newCard.about).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Send a request to the API and getting the updated card data\n\n    if (!isLiked) {\n      api.like(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      api.dislike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  function handleAddCard(cardData) {\n    api.uploadUserCard(cardData.name, cardData.link).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateAvatar(userData) {\n    api.setUserAvatar(userData.avatar).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleEditProfilePopupClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddCardPopupClick() {\n    setIsAddCardPopupOpen(true);\n  }\n\n  function handleEditAvatarPopupClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardImagePopupClick() {\n    setIsCardImagePopupOpen(true);\n  }\n\n  function handleConfirmDelPopupClick() {\n    setIsConfirmDelPopupOpen(true);\n  }\n\n  function handleCardData(cardData) {\n    setCardData(cardData);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddCardPopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsCardImagePopupOpen(false);\n  }\n\n  React.useEffect(() => {\n    const closeByEscape = e => {\n      if (e.key === 'Escape') {\n        closeAllPopups();\n      }\n    };\n\n    document.addEventListener('keydown', closeByEscape);\n    return () => document.removeEventListener('keydown', closeByEscape);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfileClick: handleEditProfilePopupClick,\n        onAddCardClick: handleAddCardPopupClick,\n        onEditAvatarClick: handleEditAvatarPopupClick,\n        onCardImageClick: handleCardImagePopupClick,\n        updateCardData: handleCardData,\n        cards: cards,\n        onCardLike: handleCardLike,\n        onCardDelete: handleConfirmDelPopupClick,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUserInfo: handleUserInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddCardPopupOpen,\n        onClose: closeAllPopups,\n        onAddCard: handleAddCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        isOpen: isCardImagePopupOpen,\n        onClose: closeAllPopups,\n        cardData: cardData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmDelPopup, {\n        isOpen: isConfirmDelPopupOpen,\n        onClose: closeAllPopups,\n        onSubmit: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+rpRwZniMUSJzEXPg6bmZ/F1Bac=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ilan/dev/around-react_p10/around-react/src/components/App.js"],"names":["React","Header","Main","Footer","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ConfirmDelPopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddCardPopupOpen","setIsAddCardPopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isCardImagePopupOpen","setIsCardImagePopupOpen","isConfirmDelPopupOpen","setIsConfirmDelPopupOpen","cardData","setCardData","cards","setCards","loading","setLoading","currentUser","setCurrentUser","useEffect","getUserInfo","then","data","catch","err","console","log","cardsData","getInitialCards","handleUserInfo","newCard","editUserInfo","name","about","closeAllPopups","handleCardLike","card","isLiked","likes","some","i","_id","like","state","map","c","dislike","handleAddCard","uploadUserCard","link","handleCardDelete","deleteCard","filter","handleUpdateAvatar","userData","setUserAvatar","avatar","handleEditProfilePopupClick","handleAddCardPopupClick","handleEditAvatarPopupClick","handleCardImagePopupClick","handleConfirmDelPopupClick","handleCardData","closeByEscape","e","key","document","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmDelPopup from './ConfirmDelPopup';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] =\n    React.useState(false);\n  const [isAddCardPopupOpen, setIsAddCardPopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] =\n    React.useState(false);\n  const [isCardImagePopupOpen, setIsCardImagePopupOpen] = React.useState(false);\n  const [isConfirmDelPopupOpen, setIsConfirmDelPopupOpen] = React.useState(false);\n  const [cardData, setCardData] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n\n  const [currentUser, setCurrentUser] = React.useState({});\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then((data) => {\n        setCurrentUser(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    (async function () {\n      setLoading(true);\n      try {\n        const cardsData = await api.getInitialCards();\n        if (cardsData) {\n          setCards(cardsData);\n        }\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  function handleUserInfo(newCard) {\n    api\n      .editUserInfo(newCard.name, newCard.about)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    // Send a request to the API and getting the updated card data\n    if (!isLiked) {\n      api\n        .like(card._id)\n        .then((newCard) => {\n          setCards((state) =>\n            state.map((c) => (c._id === card._id ? newCard : c))\n          );\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      api\n        .dislike(card._id)\n        .then((newCard) => {\n          setCards((state) =>\n            state.map((c) => (c._id === card._id ? newCard : c))\n          );\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }\n\n  function handleAddCard(cardData) {\n    api\n      .uploadUserCard(cardData.name, cardData.link)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleCardDelete(card) {\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== card._id));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleUpdateAvatar(userData) {\n    api\n      .setUserAvatar(userData.avatar)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleEditProfilePopupClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddCardPopupClick() {\n    setIsAddCardPopupOpen(true);\n  }\n\n  function handleEditAvatarPopupClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardImagePopupClick() {\n    setIsCardImagePopupOpen(true);\n  }\n\n  function handleConfirmDelPopupClick() {\n    setIsConfirmDelPopupOpen(true);\n  }\n\n  function handleCardData(cardData) {\n    setCardData(cardData);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddCardPopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsCardImagePopupOpen(false);\n  }\n\n  React.useEffect(() => {\n    const closeByEscape = (e) => {\n      if (e.key === 'Escape') {\n        closeAllPopups();\n      }\n    };\n\n    document.addEventListener('keydown', closeByEscape);\n\n    return () => document.removeEventListener('keydown', closeByEscape);\n  }, []);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page-container\">\n        <Header />\n        <Main\n          onEditProfileClick={handleEditProfilePopupClick}\n          onAddCardClick={handleAddCardPopupClick}\n          onEditAvatarClick={handleEditAvatarPopupClick}\n          onCardImageClick={handleCardImagePopupClick}\n          updateCardData={handleCardData}\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleConfirmDelPopupClick}\n          loading={loading}\n        />\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUserInfo={handleUserInfo}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddCardPopupOpen}\n          onClose={closeAllPopups}\n          onAddCard={handleAddCard}\n        />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n\n        <ImagePopup\n          isOpen={isCardImagePopupOpen}\n          onClose={closeAllPopups}\n          cardData={cardData}\n        />\n\n        <ConfirmDelPopup\n          isOpen={isConfirmDelPopupOpen}\n          onClose={closeAllPopups}\n          onSubmit={handleCardDelete}\n          \n        />\n\n        <Footer />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}