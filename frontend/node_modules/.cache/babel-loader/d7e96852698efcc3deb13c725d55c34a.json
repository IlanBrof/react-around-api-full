{"ast":null,"code":"// const BASE_URL = 'https://api.ilanbrof.students.nomoreparties.sbs';\nvar BASE_URL='http://localhost:3000';function checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"Error: \".concat(res.status,\" \").concat(res.statusText));}var signup=function signup(email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{'Content-Type':'application/json',Accept:'application/json'},body:JSON.stringify({email:email,password:password})}).then(checkResponse);};var signin=function signin(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{'Content-Type':'application/json',Accept:'application/json'},body:JSON.stringify({email:email,password:password})}).then(checkResponse).then(function(data){if(data.token){localStorage.setItem('jwt',data.token);return data;}});};var checkToken=function checkToken(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{authorization:\"Bearer \".concat(token),'Content-Type':'application/json',Accept:'application/json'}}).then(checkResponse).then(function(data){return data;});};export{signup,signin,checkToken};","map":{"version":3,"sources":["/Users/ilan/dev/react-around-api-full/frontend/src/utils/auth.js"],"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","status","statusText","signup","email","password","fetch","method","headers","Accept","body","JSON","stringify","then","signin","data","token","localStorage","setItem","checkToken","authorization"],"mappings":"AAAA;AACA,GAAMA,CAAAA,QAAQ,CAAG,uBAAjB,CAEA,QAASC,CAAAA,aAAT,CAAuBC,GAAvB,CAA4B,CAC1B,GAAIA,GAAG,CAACC,EAAR,CAAY,CACV,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACD,CACD,MAAOC,CAAAA,OAAO,CAACC,MAAR,kBAAyBJ,GAAG,CAACK,MAA7B,aAAuCL,GAAG,CAACM,UAA3C,EAAP,CACD,CAED,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAQC,QAAR,CAAqB,CAClC,MAAOC,CAAAA,KAAK,WAAIZ,QAAJ,YAAuB,CACjCa,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPC,MAAM,CAAE,kBAFD,CAFwB,CAMjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAER,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAf,CAN2B,CAAvB,CAAL,CAOJQ,IAPI,CAOClB,aAPD,CAAP,CAQD,CATD,CAWA,GAAMmB,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACV,KAAD,CAAQC,QAAR,CAAqB,CAClC,MAAOC,CAAAA,KAAK,WAAIZ,QAAJ,YAAuB,CACjCa,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPC,MAAM,CAAE,kBAFD,CAFwB,CAMjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAER,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAf,CAN2B,CAAvB,CAAL,CAQJQ,IARI,CAQClB,aARD,EASJkB,IATI,CASC,SAACE,IAAD,CAAU,CACd,GAAIA,IAAI,CAACC,KAAT,CAAgB,CACdC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAA4BH,IAAI,CAACC,KAAjC,EACA,MAAOD,CAAAA,IAAP,CACD,CACF,CAdI,CAAP,CAeD,CAhBD,CAkBA,GAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACH,KAAD,CAAW,CAC1B,MAAOV,CAAAA,KAAK,WAAIZ,QAAJ,cAAyB,CACjCa,MAAM,CAAE,KADyB,CAEjCC,OAAO,CAAE,CACLY,aAAa,kBAAYJ,KAAZ,CADR,CAEL,eAAgB,kBAFX,CAGLP,MAAM,CAAE,kBAHH,CAFwB,CAAzB,CAAL,CAQFI,IARE,CAQGlB,aARH,EASFkB,IATE,CASG,SAACE,IAAD,QAAUA,CAAAA,IAAV,EATH,CAAP,CAUH,CAXD,CAaA,OAASZ,MAAT,CAAiBW,MAAjB,CAAyBK,UAAzB","sourcesContent":["// const BASE_URL = 'https://api.ilanbrof.students.nomoreparties.sbs';\nconst BASE_URL = 'http://localhost:3000';\n\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Error: ${res.status} ${res.statusText}`);\n}\n\nconst signup = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n    },\n    body: JSON.stringify({ email, password }),\n  }).then(checkResponse);\n};\n\nconst signin = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n    },\n    body: JSON.stringify({ email, password }),\n  })\n    .then(checkResponse)\n    .then((data) => {\n      if (data.token) {\n        localStorage.setItem('jwt', data.token);\n        return data;\n      }\n    });\n};\n\nconst checkToken = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n            authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            Accept: 'application/json'\n        },\n    })\n        .then(checkResponse)\n        .then((data) => data)\n}\n\nexport { signup, signin, checkToken };"]},"metadata":{},"sourceType":"module"}