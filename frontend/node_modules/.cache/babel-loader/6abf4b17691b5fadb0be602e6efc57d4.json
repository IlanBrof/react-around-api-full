{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._token = options.token;\n    this._headers = {\n      authorization: `Bearer ${localStorage.getItem('jwt')}`,\n      'Content-type': 'application/json'\n    };\n  }\n\n  _checkResponse(response) {\n    if (response.ok) {\n      return response.json();\n    } else {\n      console.log(response.status, response.statusText);\n    }\n  }\n\n  async getInitialCards() {\n    const response = await fetch(`${this._url}/cards`, {\n      headers: this._headers\n    });\n    return this._checkResponse(response);\n  }\n\n  async getUserInfo() {\n    const response = await fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    });\n    return this._checkResponse(response);\n  }\n\n  async editUserInfo(name, about) {\n    const response = await fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    });\n    return this._checkResponse(response);\n  }\n\n  async uploadUserCard(name, link) {\n    const response = await fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    });\n    return this._checkResponse(response);\n  }\n\n  async deleteCard(cardId) {\n    const response = await fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    });\n    return this._checkResponse(response);\n  }\n\n  async like(cardId) {\n    const response = await fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers\n    });\n    return this._checkResponse(response);\n  }\n\n  async dislike(cardId) {\n    const response = await fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    });\n    return this._checkResponse(response);\n  }\n\n  async setUserAvatar(link) {\n    const response = await fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: link\n      })\n    });\n    return this._checkResponse(response);\n  }\n\n}\n\nconst api = new Api({\n  // baseUrl: 'https://api.ilanbrof.students.nomoreparties.sbs',\n  baseUrl: 'http://localhost:3000'\n});\nexport default api;","map":{"version":3,"sources":["/Users/ilan/dev/react-around-api-full/frontend/src/utils/api.js"],"names":["Api","constructor","options","_url","baseUrl","_token","token","_headers","authorization","localStorage","getItem","_checkResponse","response","ok","json","console","log","status","statusText","getInitialCards","fetch","headers","getUserInfo","editUserInfo","name","about","method","body","JSON","stringify","uploadUserCard","link","deleteCard","cardId","like","dislike","setUserAvatar","avatar","api"],"mappings":"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","sourcesContent":["class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._token = options.token;\n    this._headers = {\n      authorization: `Bearer ${localStorage.getItem('jwt')}`,\n      'Content-type': 'application/json',\n    };\n  }\n\n  _checkResponse(response) {\n    if (response.ok) {\n      return response.json();\n    } else {\n      console.log(response.status, response.statusText);\n    }\n  }\n\n  async getInitialCards() {\n    const response = await fetch(`${this._url}/cards`, {\n      headers: this._headers,\n    });\n    return this._checkResponse(response);\n  }\n\n  async getUserInfo() {\n    const response = await fetch(`${this._url}/users/me`, {\n      headers: this._headers,\n      \n    });\n    return this._checkResponse(response);\n  }\n\n  async editUserInfo(name, about) {\n    const response = await fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      }),\n    });\n    return this._checkResponse(response);\n  }\n\n  async uploadUserCard(name, link) {\n    const response = await fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({ name: name, link: link }),\n    });\n    return this._checkResponse(response);\n  }\n\n  async deleteCard(cardId) {\n    const response = await fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    });\n    return this._checkResponse(response);\n  }\n\n  async like(cardId) {\n    const response = await fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers,\n    });\n    return this._checkResponse(response);\n  }\n\n  async dislike(cardId) {\n    const response = await fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    });\n    return this._checkResponse(response);\n  }\n\n  async setUserAvatar(link) {\n    const response = await fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({ avatar: link }),\n    });\n    return this._checkResponse(response);\n  }\n}\n\nconst api = new Api({\n  // baseUrl: 'https://api.ilanbrof.students.nomoreparties.sbs',\n  baseUrl: 'http://localhost:3000',\n});\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}