{"ast":null,"code":"// const BASE_URL = 'https://api.ilanbrof.students.nomoreparties.sbs';\nconst BASE_URL = 'http://localhost:3000';\n\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n\n  return Promise.reject(`Error: ${res.status} ${res.statusText}`);\n}\n\nconst signup = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkResponse);\n};\n\nconst signin = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkResponse).then(data => {\n    if (data.token) {\n      localStorage.setItem('jwt', data.token);\n      return data;\n    }\n  });\n};\n\nconst checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n    }\n  }).then(checkResponse).then(data => data);\n};\n\nexport { signup, signin, checkToken };","map":{"version":3,"sources":["/Users/ilan/dev/react-around-api-full/frontend/src/utils/auth.js"],"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","status","statusText","signup","email","password","fetch","method","headers","Accept","body","JSON","stringify","then","signin","data","token","localStorage","setItem","checkToken","authorization"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,uBAAjB;;AAEA,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;AAC1B,MAAIA,GAAG,CAACC,EAAR,EAAY;AACV,WAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;;AACD,SAAOC,OAAO,CAACC,MAAR,CAAgB,UAASJ,GAAG,CAACK,MAAO,IAAGL,GAAG,CAACM,UAAW,EAAtD,CAAP;AACD;;AAED,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAClC,SAAOC,KAAK,CAAE,GAAEZ,QAAS,SAAb,EAAuB;AACjCa,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,MAAM,EAAE;AAFD,KAFwB;AAMjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAER,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAf;AAN2B,GAAvB,CAAL,CAOJQ,IAPI,CAOClB,aAPD,CAAP;AAQD,CATD;;AAWA,MAAMmB,MAAM,GAAG,CAACV,KAAD,EAAQC,QAAR,KAAqB;AAClC,SAAOC,KAAK,CAAE,GAAEZ,QAAS,SAAb,EAAuB;AACjCa,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,MAAM,EAAE;AAFD,KAFwB;AAMjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAER,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAf;AAN2B,GAAvB,CAAL,CAQJQ,IARI,CAQClB,aARD,EASJkB,IATI,CASEE,IAAD,IAAU;AACd,QAAIA,IAAI,CAACC,KAAT,EAAgB;AACdC,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BH,IAAI,CAACC,KAAjC;AACA,aAAOD,IAAP;AACD;AACF,GAdI,CAAP;AAeD,CAhBD;;AAkBA,MAAMI,UAAU,GAAIH,KAAD,IAAW;AAC1B,SAAOV,KAAK,CAAE,GAAEZ,QAAS,WAAb,EAAyB;AACjCa,IAAAA,MAAM,EAAE,KADyB;AAEjCC,IAAAA,OAAO,EAAE;AACLY,MAAAA,aAAa,EAAG,UAASJ,KAAM,EAD1B;AAEL,sBAAgB,kBAFX;AAGLP,MAAAA,MAAM,EAAE;AAHH;AAFwB,GAAzB,CAAL,CAQFI,IARE,CAQGlB,aARH,EASFkB,IATE,CASIE,IAAD,IAAUA,IATb,CAAP;AAUH,CAXD;;AAaA,SAASZ,MAAT,EAAiBW,MAAjB,EAAyBK,UAAzB","sourcesContent":["// const BASE_URL = 'https://api.ilanbrof.students.nomoreparties.sbs';\nconst BASE_URL = 'http://localhost:3000';\n\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Error: ${res.status} ${res.statusText}`);\n}\n\nconst signup = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n    },\n    body: JSON.stringify({ email, password }),\n  }).then(checkResponse);\n};\n\nconst signin = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n    },\n    body: JSON.stringify({ email, password }),\n  })\n    .then(checkResponse)\n    .then((data) => {\n      if (data.token) {\n        localStorage.setItem('jwt', data.token);\n        return data;\n      }\n    });\n};\n\nconst checkToken = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n            authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            Accept: 'application/json'\n        },\n    })\n        .then(checkResponse)\n        .then((data) => data)\n}\n\nexport { signup, signin, checkToken };"]},"metadata":{},"sourceType":"module"}