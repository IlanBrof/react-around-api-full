{"ast":null,"code":"var _jsxFileName = \"/Users/ilan/dev/around-react_p10/around-react/src/components/Loader.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport ClipLoader from \"react-spinners/ClipLoader\"; // Can be a string as well. Need to ensure each key-value pair ends with ;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst override = css`\n  display: absolute;\n  position: relative;\n  margin: 0 0;\n  border-color: white;\n`;\n\nfunction Loader() {\n  _s();\n\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState(\"#fff\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sweet-loading\",\n    children: /*#__PURE__*/_jsxDEV(ClipLoader, {\n      color: color,\n      loading: loading,\n      css: override,\n      size: 150\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Loader, \"ZIOKLytH4HYIV/Z9QBDoYyHcBzQ=\");\n\n_c = Loader;\nexport default Loader;\n\nvar _c;\n\n$RefreshReg$(_c, \"Loader\");","map":{"version":3,"sources":["/Users/ilan/dev/around-react_p10/around-react/src/components/Loader.js"],"names":["useState","css","ClipLoader","override","Loader","loading","setLoading","color","setColor"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,UAAP,MAAuB,2BAAvB,C,CAEA;;;AACA,MAAMC,QAAQ,GAAGF,GAAI;AACrB;AACA;AACA;AACA;AACA,CALA;;AAOA,SAASG,MAAT,GAAkB;AAAA;;AAChB,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAApC;AACA,MAAI,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,MAAD,CAAhC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BAEE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEO,KAAnB;AAA0B,MAAA,OAAO,EAAEF,OAAnC;AAA4C,MAAA,GAAG,EAAEF,QAAjD;AAA2D,MAAA,IAAI,EAAE;AAAjE;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAVQC,M;;KAAAA,M;AAYT,eAAeA,MAAf","sourcesContent":["import { useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: absolute;\n  position: relative;\n  margin: 0 0;\n  border-color: white;\n`;\n\nfunction Loader() {\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState(\"#fff\");\n\n  return (\n    <div className=\"sweet-loading\">\n\n      <ClipLoader color={color} loading={loading} css={override} size={150} />\n    </div>\n  );\n}\n\nexport default Loader;"]},"metadata":{},"sourceType":"module"}