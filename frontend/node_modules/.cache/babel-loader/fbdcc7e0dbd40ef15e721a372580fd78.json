{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._token = options.token; // this._headers = {\n    //   authorization: this._token,\n    //   'Content-type': 'application/json',\n    // };\n  }\n\n  _checkResponse(response) {\n    if (response.ok) {\n      return response.json();\n    } else {\n      console.log(response.status, response.statusText);\n    }\n  }\n\n  async getInitialCards(token) {\n    const response = await fetch(`${this._url}/cards`, {\n      headers: {\n        authorization: `Bearer ${token}`\n      }\n    });\n    return this._checkResponse(response);\n  }\n\n  async getUserInfo(token) {\n    const response = await fetch(`${this._url}/users/me`, {\n      headers: {\n        authorization: `Bearer ${token}`\n      }\n    });\n    return this._checkResponse(response);\n  }\n\n  async editUserInfo(name, about) {\n    const response = await fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    });\n    return this._checkResponse(response);\n  }\n\n  async uploadUserCard(name, link) {\n    const response = await fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    });\n    return this._checkResponse(response);\n  }\n\n  async deleteCard(cardId) {\n    const response = await fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    });\n    return this._checkResponse(response);\n  }\n\n  async like(cardId) {\n    const response = await fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers\n    });\n    return this._checkResponse(response);\n  }\n\n  async dislike(cardId) {\n    const response = await fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    });\n    return this._checkResponse(response);\n  }\n\n  async setUserAvatar(link) {\n    const response = await fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: link\n      })\n    });\n    return this._checkResponse(response);\n  }\n\n}\n\nconst api = new Api({\n  // baseUrl: 'https://api.ilanbrof.students.nomoreparties.sbs',\n  baseUrl: 'http://localhost:3000'\n});\nexport default api;","map":{"version":3,"sources":["/Users/ilan/dev/react-around-api-full/frontend/src/utils/api.js"],"names":["Api","constructor","options","_url","baseUrl","_token","token","_checkResponse","response","ok","json","console","log","status","statusText","getInitialCards","fetch","headers","authorization","getUserInfo","editUserInfo","name","about","method","_headers","body","JSON","stringify","uploadUserCard","link","deleteCard","cardId","like","dislike","setUserAvatar","avatar","api"],"mappings":"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","sourcesContent":["class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._token = options.token;\n    // this._headers = {\n    //   authorization: this._token,\n    //   'Content-type': 'application/json',\n    // };\n  }\n\n  _checkResponse(response) {\n    if (response.ok) {\n      return response.json();\n    } else {\n      console.log(response.status, response.statusText);\n    }\n  }\n\n  async getInitialCards(token) {\n    const response = await fetch(`${this._url}/cards`, {\n      headers: {\n        authorization: `Bearer ${token}`,\n      }\n    });\n    return this._checkResponse(response);\n  }\n\n  async getUserInfo(token) {\n    const response = await fetch(`${this._url}/users/me`, {\n      headers: {\n        authorization: `Bearer ${token}`,\n      }\n      \n    });\n    return this._checkResponse(response);\n  }\n\n  async editUserInfo(name, about) {\n    const response = await fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      }),\n    });\n    return this._checkResponse(response);\n  }\n\n  async uploadUserCard(name, link) {\n    const response = await fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({ name: name, link: link }),\n    });\n    return this._checkResponse(response);\n  }\n\n  async deleteCard(cardId) {\n    const response = await fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    });\n    return this._checkResponse(response);\n  }\n\n  async like(cardId) {\n    const response = await fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers,\n    });\n    return this._checkResponse(response);\n  }\n\n  async dislike(cardId) {\n    const response = await fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    });\n    return this._checkResponse(response);\n  }\n\n  async setUserAvatar(link) {\n    const response = await fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({ avatar: link }),\n    });\n    return this._checkResponse(response);\n  }\n}\n\nconst api = new Api({\n  // baseUrl: 'https://api.ilanbrof.students.nomoreparties.sbs',\n  baseUrl: 'http://localhost:3000',\n});\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}