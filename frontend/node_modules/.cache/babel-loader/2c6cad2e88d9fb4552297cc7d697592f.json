{"ast":null,"code":"var _jsxFileName = \"/Users/ilan/dev/react-around-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmDelPopup from './ConfirmDelPopup';\nimport Register from './Register';\nimport Login from './Login';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoToolTip from './InfoToolTip';\nimport * as auth from '../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddCardPopupOpen, setIsAddCardPopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isCardImagePopupOpen, setIsCardImagePopupOpen] = React.useState(false);\n  const [isConfirmDelPopupOpen, setIsConfirmDelPopupOpen] = React.useState(false);\n  const [cardData, setCardData] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const [cardDelConfirm, setCardDelConfirm] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [isLoggedIn, setIsLoggedIn] = React.useState(true);\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const history = useHistory();\n\n  function onRegistration(email, password) {\n    auth.signup(email, password).then(() => {\n      history.push('/');\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function onLogin(evt) {\n    evt.preventDefault();\n    auth.signin(email, password).then(data => {\n      if (data.token) {\n        localStorage.setItem('jwt', data.token);\n      }\n\n      setIsLoggedIn(true);\n      history.push('/');\n    }).catch(err => {\n      console.log('Error: ', err.status, err.statusText);\n    });\n  }\n\n  React.useEffect(() => {\n    api.getUserInfo().then(data => {\n      setCurrentUser(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  React.useEffect(() => {\n    (async function () {\n      setLoading(true);\n\n      try {\n        const cardsData = await api.getInitialCards();\n\n        if (cardsData) {\n          setCards(cardsData);\n        }\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  function handleUserInfo(newCard) {\n    api.editUserInfo(newCard.name, newCard.about).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Send a request to the API and getting the updated card data\n\n    if (!isLiked) {\n      api.like(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      api.dislike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  function handleAddCard(cardData) {\n    api.uploadUserCard(cardData.name, cardData.link).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardDelete(e) {\n    e.preventDefault();\n    api.deleteCard(cardDelConfirm._id).then(() => {\n      setCards(state => state.filter(c => c._id !== cardDelConfirm._id));\n    }, closeAllPopups()).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateAvatar(userData) {\n    api.setUserAvatar(userData.avatar).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleEditProfilePopupClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddCardPopupClick() {\n    setIsAddCardPopupOpen(true);\n  }\n\n  function handleEditAvatarPopupClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardImagePopupClick() {\n    setIsCardImagePopupOpen(true);\n  }\n\n  function handleConfirmDelPopupClick(card) {\n    setIsConfirmDelPopupOpen(true);\n    setCardDelConfirm(card);\n  }\n\n  function handleCardData(cardData) {\n    setCardData(cardData);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddCardPopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsCardImagePopupOpen(false);\n    setIsConfirmDelPopupOpen(false);\n  }\n\n  React.useEffect(() => {\n    const closeByEscape = e => {\n      if (e.key === 'Escape') {\n        closeAllPopups();\n      }\n    };\n\n    document.addEventListener('keydown', closeByEscape);\n    return () => document.removeEventListener('keydown', closeByEscape);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            onRegistration: onRegistration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          component: Main,\n          isloggedIn: isLoggedIn,\n          setCurrentUser: setCurrentUser,\n          onEditProfileClick: handleEditProfilePopupClick,\n          onAddCardClick: handleAddCardPopupClick,\n          onEditAvatarClick: handleEditAvatarPopupClick,\n          onCardImageClick: handleCardImagePopupClick,\n          updateCardData: handleCardData,\n          cards: cards,\n          onCardLike: handleCardLike,\n          onCardDelete: handleConfirmDelPopupClick,\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUserInfo: handleUserInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddCardPopupOpen,\n        onClose: closeAllPopups,\n        onAddCard: handleAddCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        isOpen: isCardImagePopupOpen,\n        onClose: closeAllPopups,\n        cardData: cardData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmDelPopup, {\n        isOpen: isConfirmDelPopupOpen,\n        onClose: closeAllPopups,\n        onSubmit: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"V9BdXamhoAzV2y9kcWFxlv0Rb8Y=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ilan/dev/react-around-auth/src/components/App.js"],"names":["React","Switch","Route","useHistory","Header","Main","Footer","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ConfirmDelPopup","Register","Login","ProtectedRoute","InfoToolTip","auth","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddCardPopupOpen","setIsAddCardPopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isCardImagePopupOpen","setIsCardImagePopupOpen","isConfirmDelPopupOpen","setIsConfirmDelPopupOpen","cardData","setCardData","cards","setCards","loading","setLoading","cardDelConfirm","setCardDelConfirm","currentUser","setCurrentUser","isLoggedIn","setIsLoggedIn","email","setEmail","password","setPassword","history","onRegistration","signup","then","push","catch","err","console","log","onLogin","evt","preventDefault","signin","data","token","localStorage","setItem","status","statusText","useEffect","getUserInfo","cardsData","getInitialCards","handleUserInfo","newCard","editUserInfo","name","about","closeAllPopups","handleCardLike","card","isLiked","likes","some","i","_id","like","state","map","c","dislike","handleAddCard","uploadUserCard","link","handleCardDelete","e","deleteCard","filter","handleUpdateAvatar","userData","setUserAvatar","avatar","handleEditProfilePopupClick","handleAddCardPopupClick","handleEditAvatarPopupClick","handleCardImagePopupClick","handleConfirmDelPopupClick","handleCardData","closeByEscape","key","document","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmDelPopup from './ConfirmDelPopup';\nimport Register from './Register';\nimport Login from './Login';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoToolTip from './InfoToolTip';\nimport * as auth from '../utils/auth';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] =\n    React.useState(false);\n  const [isAddCardPopupOpen, setIsAddCardPopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] =\n    React.useState(false);\n  const [isCardImagePopupOpen, setIsCardImagePopupOpen] = React.useState(false);\n  const [isConfirmDelPopupOpen, setIsConfirmDelPopupOpen] =\n    React.useState(false);\n  const [cardData, setCardData] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const [cardDelConfirm, setCardDelConfirm] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [isLoggedIn, setIsLoggedIn] = React.useState(true);\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const history = useHistory();\n\n  function onRegistration(email, password) {\n    auth\n      .signup(email, password)\n      .then(() => {\n        history.push('/');\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function onLogin(evt) {\n    evt.preventDefault();\n    auth\n      .signin(email, password)\n      .then((data) => {\n        if (data.token) {\n          localStorage.setItem('jwt', data.token);\n        }\n        setIsLoggedIn(true);\n        history.push('/');\n      })\n      .catch((err) => {\n        console.log('Error: ', err.status, err.statusText);\n      });\n  }\n\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then((data) => {\n        setCurrentUser(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    (async function () {\n      setLoading(true);\n      try {\n        const cardsData = await api.getInitialCards();\n        if (cardsData) {\n          setCards(cardsData);\n        }\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  function handleUserInfo(newCard) {\n    api\n      .editUserInfo(newCard.name, newCard.about)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    // Send a request to the API and getting the updated card data\n    if (!isLiked) {\n      api\n        .like(card._id)\n        .then((newCard) => {\n          setCards((state) =>\n            state.map((c) => (c._id === card._id ? newCard : c))\n          );\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      api\n        .dislike(card._id)\n        .then((newCard) => {\n          setCards((state) =>\n            state.map((c) => (c._id === card._id ? newCard : c))\n          );\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }\n\n  function handleAddCard(cardData) {\n    api\n      .uploadUserCard(cardData.name, cardData.link)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleCardDelete(e) {\n    e.preventDefault();\n    api\n      .deleteCard(cardDelConfirm._id)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== cardDelConfirm._id));\n      }, closeAllPopups())\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleUpdateAvatar(userData) {\n    api\n      .setUserAvatar(userData.avatar)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleEditProfilePopupClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddCardPopupClick() {\n    setIsAddCardPopupOpen(true);\n  }\n\n  function handleEditAvatarPopupClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardImagePopupClick() {\n    setIsCardImagePopupOpen(true);\n  }\n\n  function handleConfirmDelPopupClick(card) {\n    setIsConfirmDelPopupOpen(true);\n    setCardDelConfirm(card);\n  }\n\n  function handleCardData(cardData) {\n    setCardData(cardData);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddCardPopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsCardImagePopupOpen(false);\n    setIsConfirmDelPopupOpen(false);\n  }\n\n  React.useEffect(() => {\n    const closeByEscape = (e) => {\n      if (e.key === 'Escape') {\n        closeAllPopups();\n      }\n    };\n\n    document.addEventListener('keydown', closeByEscape);\n\n    return () => document.removeEventListener('keydown', closeByEscape);\n  }, []);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page-container\">\n        <Header />\n        {/* <InfoToolTip /> */}\n        <Switch>\n          <Route path=\"/signin\">\n            <Login />\n          </Route>\n          <Route path=\"/signup\">\n            <Register onRegistration={onRegistration} />\n          </Route>\n\n          <ProtectedRoute\n            exact\n            path=\"/\"\n            component={Main}\n            isloggedIn={isLoggedIn}\n            setCurrentUser={setCurrentUser}\n            onEditProfileClick={handleEditProfilePopupClick}\n            onAddCardClick={handleAddCardPopupClick}\n            onEditAvatarClick={handleEditAvatarPopupClick}\n            onCardImageClick={handleCardImagePopupClick}\n            updateCardData={handleCardData}\n            cards={cards}\n            onCardLike={handleCardLike}\n            onCardDelete={handleConfirmDelPopupClick}\n            loading={loading}\n          />\n        </Switch>\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUserInfo={handleUserInfo}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddCardPopupOpen}\n          onClose={closeAllPopups}\n          onAddCard={handleAddCard}\n        />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n\n        <ImagePopup\n          isOpen={isCardImagePopupOpen}\n          onClose={closeAllPopups}\n          cardData={cardData}\n        />\n\n        <ConfirmDelPopup\n          isOpen={isConfirmDelPopupOpen}\n          onClose={closeAllPopups}\n          onSubmit={handleCardDelete}\n        />\n\n        <Footer />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}