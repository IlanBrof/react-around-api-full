{"ast":null,"code":"var _jsxFileName = \"/Users/ilan/dev/around-react_p10/around-react/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { api } from '../utils/api';\nimport Card from './Card';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(props) {\n  _s();\n\n  const [cards, setCards] = React.useState([]);\n  const [deleteCard, setDeleteCard] = React.useState({});\n  const currentUser = React.useContext(CurrentUserContext);\n  React.useEffect(() => {\n    api.getInitialCards().then(data => {\n      setCards(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Send a request to the API and getting the updated card data\n\n    if (!isLiked) {\n      api.like(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      api.dislike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-menu__profile-pic\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"profile-menu__avatar\",\n          src: currentUser.avatar,\n          id: \"avatar_image\",\n          alt: \"avatar image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.onEditAvatarClick,\n          className: \"profile-menu__avatar-button\",\n          type: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-menu__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-menu__alignment\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"profile-menu__full-name\",\n            children: currentUser.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: props.onEditProfileClick,\n            className: \"profile-menu__edit-button\",\n            type: \"button\",\n            \"aria-label\": \"edit-button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile-menu__title\",\n          children: currentUser.about\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.onAddPlaceClick,\n        className: \"profile-menu__add-button\",\n        type: \"button\",\n        \"aria-label\": \"add-button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"cards\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"cards__list\",\n        children: cards.map(element => /*#__PURE__*/_jsxDEV(Card, {\n          card: element,\n          onClick: props.onCardImageClick,\n          updateCardData: props.updateCardData,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete\n        }, element._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"30l7HCLOxkdTANgLbAExGRXu1SM=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/ilan/dev/around-react_p10/around-react/src/components/Main.js"],"names":["React","api","Card","CurrentUserContext","Main","props","cards","setCards","useState","deleteCard","setDeleteCard","currentUser","useContext","useEffect","getInitialCards","then","data","catch","err","console","log","handleCardLike","card","isLiked","likes","some","i","_id","like","newCard","state","map","c","dislike","handleCardDelete","filter","avatar","onEditAvatarClick","name","onEditProfileClick","about","onAddPlaceClick","element","onCardImageClick","updateCardData"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { api } from '../utils/api';\nimport Card from './Card';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\nfunction Main(props) {\n  const [cards, setCards] = React.useState([]);\n  const [deleteCard, setDeleteCard] = React.useState({});\n  const currentUser = React.useContext(CurrentUserContext);\n\n  React.useEffect(() => {\n    api\n      .getInitialCards()\n      .then((data) => {\n        setCards(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    // Send a request to the API and getting the updated card data\n    if (!isLiked) {\n      api\n        .like(card._id)\n        .then((newCard) => {\n          setCards((state) =>\n            state.map((c) => (c._id === card._id ? newCard : c))\n          );\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      api\n        .dislike(card._id)\n        .then((newCard) => {\n          setCards((state) =>\n            state.map((c) => (c._id === card._id ? newCard : c))\n          );\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }\n\n  function handleCardDelete(card) {\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== card._id));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  return (\n    <main className=\"main\">\n      <section className=\"profile-menu\">\n        <div className=\"profile-menu__profile-pic\">\n          <img\n            className=\"profile-menu__avatar\"\n            src={currentUser.avatar}\n            id=\"avatar_image\"\n            alt=\"avatar image\"\n          ></img>\n          <button\n            onClick={props.onEditAvatarClick}\n            className=\"profile-menu__avatar-button\"\n            type=\"button\"\n          ></button>\n        </div>\n        <div className=\"profile-menu__info\">\n          <div className=\"profile-menu__alignment\">\n            <h1 className=\"profile-menu__full-name\">{currentUser.name}</h1>\n            <button\n              onClick={props.onEditProfileClick}\n              className=\"profile-menu__edit-button\"\n              type=\"button\"\n              aria-label=\"edit-button\"\n            ></button>\n          </div>\n          <p className=\"profile-menu__title\">{currentUser.about}</p>\n        </div>\n        <button\n          onClick={props.onAddPlaceClick}\n          className=\"profile-menu__add-button\"\n          type=\"button\"\n          aria-label=\"add-button\"\n        ></button>\n      </section>\n\n      <section className=\"cards\">\n        <ul className=\"cards__list\">\n          {cards.map((element) => (\n            <Card\n              key={element._id}\n              card={element}\n              onClick={props.onCardImageClick}\n              updateCardData={props.updateCardData}\n              onCardLike={handleCardLike}\n              onCardDelete={handleCardDelete}\n            />\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}