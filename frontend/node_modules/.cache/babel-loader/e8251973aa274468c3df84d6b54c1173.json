{"ast":null,"code":"var _jsxFileName = \"/Users/ilan/dev/react-around-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmDelPopup from './ConfirmDelPopup';\nimport Register from './Register';\nimport Login from './Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddCardPopupOpen, setIsAddCardPopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isCardImagePopupOpen, setIsCardImagePopupOpen] = React.useState(false);\n  const [isConfirmDelPopupOpen, setIsConfirmDelPopupOpen] = React.useState(false);\n  const [cardData, setCardData] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const [cardDelConfirm, setCardDelConfirm] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  React.useEffect(() => {\n    api.getUserInfo().then(data => {\n      setCurrentUser(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  React.useEffect(() => {\n    (async function () {\n      setLoading(true);\n\n      try {\n        const cardsData = await api.getInitialCards();\n\n        if (cardsData) {\n          setCards(cardsData);\n        }\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  function handleUserInfo(newCard) {\n    api.editUserInfo(newCard.name, newCard.about).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Send a request to the API and getting the updated card data\n\n    if (!isLiked) {\n      api.like(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      api.dislike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  function handleAddCard(cardData) {\n    api.uploadUserCard(cardData.name, cardData.link).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardDelete(e) {\n    e.preventDefault();\n    api.deleteCard(cardDelConfirm._id).then(() => {\n      setCards(state => state.filter(c => c._id !== cardDelConfirm._id));\n    }, closeAllPopups()).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateAvatar(userData) {\n    api.setUserAvatar(userData.avatar).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleEditProfilePopupClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddCardPopupClick() {\n    setIsAddCardPopupOpen(true);\n  }\n\n  function handleEditAvatarPopupClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardImagePopupClick() {\n    setIsCardImagePopupOpen(true);\n  }\n\n  function handleConfirmDelPopupClick(card) {\n    setIsConfirmDelPopupOpen(true);\n    setCardDelConfirm(card);\n  }\n\n  function handleCardData(cardData) {\n    setCardData(cardData);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddCardPopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsCardImagePopupOpen(false);\n    setIsConfirmDelPopupOpen(false);\n  }\n\n  React.useEffect(() => {\n    const closeByEscape = e => {\n      if (e.key === 'Escape') {\n        closeAllPopups();\n      }\n    };\n\n    document.addEventListener('keydown', closeByEscape);\n    return () => document.removeEventListener('keydown', closeByEscape);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"switch\", {\n        children: [/*#__PURE__*/_jsxDEV(\"route\", {\n          path: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"route\", {\n          path: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"route\", {\n          path: \"/register\",\n          children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"esjVe5/wvpZJO6gr06TgdzTMpnA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ilan/dev/react-around-auth/src/components/App.js"],"names":["React","Header","Main","Footer","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ConfirmDelPopup","Register","Login","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddCardPopupOpen","setIsAddCardPopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isCardImagePopupOpen","setIsCardImagePopupOpen","isConfirmDelPopupOpen","setIsConfirmDelPopupOpen","cardData","setCardData","cards","setCards","loading","setLoading","cardDelConfirm","setCardDelConfirm","currentUser","setCurrentUser","isLoggedIn","setIsLoggedIn","useEffect","getUserInfo","then","data","catch","err","console","log","cardsData","getInitialCards","handleUserInfo","newCard","editUserInfo","name","about","closeAllPopups","handleCardLike","card","isLiked","likes","some","i","_id","like","state","map","c","dislike","handleAddCard","uploadUserCard","link","handleCardDelete","e","preventDefault","deleteCard","filter","handleUpdateAvatar","userData","setUserAvatar","avatar","handleEditProfilePopupClick","handleAddCardPopupClick","handleEditAvatarPopupClick","handleCardImagePopupClick","handleConfirmDelPopupClick","handleCardData","closeByEscape","key","document","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmDelPopup from './ConfirmDelPopup';\nimport Register from './Register';\nimport Login from './Login';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] =\n    React.useState(false);\n  const [isAddCardPopupOpen, setIsAddCardPopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] =\n    React.useState(false);\n  const [isCardImagePopupOpen, setIsCardImagePopupOpen] = React.useState(false);\n  const [isConfirmDelPopupOpen, setIsConfirmDelPopupOpen] =\n    React.useState(false);\n  const [cardData, setCardData] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const [cardDelConfirm, setCardDelConfirm] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then((data) => {\n        setCurrentUser(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    (async function () {\n      setLoading(true);\n      try {\n        const cardsData = await api.getInitialCards();\n        if (cardsData) {\n          setCards(cardsData);\n        }\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  function handleUserInfo(newCard) {\n    api\n      .editUserInfo(newCard.name, newCard.about)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    // Send a request to the API and getting the updated card data\n    if (!isLiked) {\n      api\n        .like(card._id)\n        .then((newCard) => {\n          setCards((state) =>\n            state.map((c) => (c._id === card._id ? newCard : c))\n          );\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      api\n        .dislike(card._id)\n        .then((newCard) => {\n          setCards((state) =>\n            state.map((c) => (c._id === card._id ? newCard : c))\n          );\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }\n\n  function handleAddCard(cardData) {\n    api\n      .uploadUserCard(cardData.name, cardData.link)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleCardDelete(e) {\n    e.preventDefault();\n    api\n      .deleteCard(cardDelConfirm._id)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== cardDelConfirm._id));\n      }, closeAllPopups())\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleUpdateAvatar(userData) {\n    api\n      .setUserAvatar(userData.avatar)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleEditProfilePopupClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddCardPopupClick() {\n    setIsAddCardPopupOpen(true);\n  }\n\n  function handleEditAvatarPopupClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardImagePopupClick() {\n    setIsCardImagePopupOpen(true);\n  }\n\n  function handleConfirmDelPopupClick(card) {\n    setIsConfirmDelPopupOpen(true);\n    setCardDelConfirm(card);\n  }\n\n  function handleCardData(cardData) {\n    setCardData(cardData);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddCardPopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsCardImagePopupOpen(false);\n    setIsConfirmDelPopupOpen(false);\n  }\n\n  React.useEffect(() => {\n    const closeByEscape = (e) => {\n      if (e.key === 'Escape') {\n        closeAllPopups();\n      }\n    };\n\n    document.addEventListener('keydown', closeByEscape);\n\n    return () => document.removeEventListener('keydown', closeByEscape);\n  }, []);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page-container\">\n        \n          <Header />\n          {/* <Main\n            onEditProfileClick={handleEditProfilePopupClick}\n            onAddCardClick={handleAddCardPopupClick}\n            onEditAvatarClick={handleEditAvatarPopupClick}\n            onCardImageClick={handleCardImagePopupClick}\n            updateCardData={handleCardData}\n            cards={cards}\n            onCardLike={handleCardLike}\n            onCardDelete={handleConfirmDelPopupClick}\n            loading={loading}\n          /> */}\n\n          {/* <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUserInfo={handleUserInfo}\n          />\n\n          <AddPlacePopup\n            isOpen={isAddCardPopupOpen}\n            onClose={closeAllPopups}\n            onAddCard={handleAddCard}\n          />\n\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n          />\n\n          <ImagePopup\n            isOpen={isCardImagePopupOpen}\n            onClose={closeAllPopups}\n            cardData={cardData}\n          />\n\n          <ConfirmDelPopup\n            isOpen={isConfirmDelPopupOpen}\n            onClose={closeAllPopups}\n            onSubmit={handleCardDelete}\n          />\n\n          <Footer /> */}\n        <switch>\n          <route path=\"/\"></route>\n          <route path=\"/login\">\n            <Login />\n          </route>\n          <route path=\"/register\">\n            <Register />\n          </route>\n        </switch>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}